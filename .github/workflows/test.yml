name: Test

on:
  push:
    branches: [ main, deno ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lint:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      
      - name: Check formatting
        run: deno fmt --check
      
      - name: Run linter
        run: deno lint
      
      - name: Type check
        run: deno check **/*.ts

  install-and-test:
    name: Install & Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run dotfiles installation
        run: bash install.sh
        timeout-minutes: 15
      
      - name: Validate installation with tests
        run: |
          export PATH="$HOME/.proto/bin:$PATH"
          deno test --allow-all tests/test.ts
      
      - name: Check core tools are available
        run: |
          echo "=== Verifying installed tools ==="
          $HOME/.proto/bin/proto --version
          $HOME/.proto/bin/deno --version
          git --version
          test -f ~/.gitconfig && echo "✅ Git config exists"
          test -f ~/.config/fish/config.fish && echo "✅ Fish config exists" 
          test -f ~/.config/nvim/init.lua && echo "✅ Neovim config exists"
          test -f ~/.tmux.conf && echo "✅ Tmux config exists"

  docker-integration:
    name: Docker Integration Test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Test full installation in clean Docker environment
        run: |
          cd tests/environment
          docker-compose up --build --exit-code-from dotfiles-test dotfiles-test
        timeout-minutes: 20